@{
    Layout = "_AccountLayout";
}

@using BookTalk.Shared.ViewModels

@model SigninViewModel?

@{
    ViewData["Title"] = "Login";
}

@using (Html.BeginForm("Signin", "Account", FormMethod.Post, new { @class = "form-container custom-base-container px-4 py-3" }))
{
    <div class="form-group">
        @Html.LabelFor(m => m.Id, new { @class = "control-label", @for = "exampleDropdownFormID" })
        @Html.TextBoxFor(m => m.Id, new { @class = "form-control", @id = "exampleDropdownFormID", @placeholder = "Your ID" })
        @Html.ValidationMessageFor(m => m.Id, "", new { @class = "text-danger" })
    </div>

    <div class="form-group">
        @Html.LabelFor(m => m.Password, new { @class = "control-label", @for = "exampleDropdownFormPassword1" })
        @Html.PasswordFor(m => m.Password, new { @class = "form-control", @id = "exampleDropdownFormPassword1", @placeholder = "Password" })
        @Html.ValidationMessageFor(m => m.Password, "", new { @class = "text-danger" })
    </div>

    <div class="dropdown-divider"></div>
    <a class="dropdown-item" href="#">New around here? Sign up</a>
    <a class="dropdown-item" href="#">Forgot password?</a>

    <button type="submit" class="btn btn-primary float-right">Sign in</button>
}

<script>
    window.onload = function () {
        OnLoadView();
    }

    function OnLoadView() {
        var sSuccessMessage = "@Html.Raw(TempData["SuccessMessage"])"; // 로그인 성공 메세지
        var sErrorMessage = "@Html.Raw(ViewBag.ErrorMessage)"; // 오류 메세지

        if (sSuccessMessage) {
            alert(sSuccessMessage);
        }
        else if (sErrorMessage) {
            alert(sErrorMessage);
        }
    }
</script>
