@{
    Layout = "_AccountLayout";
}

@using BookTalk.Client.Controllers
@using BookTalk.Shared.ViewModels.Account

@model SignupViewModel?

@using (Html.BeginForm(nameof(AccountController.Signup), nameof(AccountController).Replace("Controller", ""), FormMethod.Post, new { @class = "form-container custom-base-container px-4 py-3" }))
{
    <h5 class="text-center">Sign up</h5>

    <div class="form-group">
        @Html.LabelFor(m => m.Id, new { @class = "control-label", @for = "txtFormID" })
        @Html.TextBoxFor(m => m.Id, new { @class = "form-control", @id = "txtFormID", @placeholder = "Your ID" })
        @Html.ValidationMessageFor(m => m.Id, "", new { @class = "text-danger" })
    </div>

    <div class="form-group">
        @Html.LabelFor(m => m.Password, new { @class = "control-label", @for = "txtFormPassword" })
        @Html.PasswordFor(m => m.Password, new { @class = "form-control", @id = "txtFormPassword", @placeholder = "Password" })
        @Html.ValidationMessageFor(m => m.Password, "", new { @class = "text-danger" })
    </div>

    <div class="form-group">
        @Html.LabelFor(m => m.Name, new { @class = "control-label", @for = "txtFormName" })
        @Html.TextBoxFor(m => m.Name, new { @class = "form-control", @id = "txtFormName", @placeholder = "Your name" })
        @Html.ValidationMessageFor(m => m.Name, "", new { @class = "text-danger" })
    </div>

    <button type="submit" class="btn btn-primary float-right">Sign up</button>
}

<script>
    window.onload = function () {
        OnLoadView();
    }

    function OnLoadView() {
        let errorMessage = "@Html.Raw(ViewBag.ErrorMessage)";

        if (errorMessage) {
            alert(errorMessage);
        }
    }
</script>

