@using BookTalk.Shared.ViewModels.Review
@using BookTalk.Client.Controllers
@model ReviewPostViewModel

@using (Html.BeginForm(nameof(ReviewController.Post), nameof(ReviewController).Replace("Controller", ""), FormMethod.Post, new { @class = "container mt-4" }))
{
    @Html.HiddenFor(model => model.Id, new { @id = "hidId", @readonly = "readonly" })
    @Html.HiddenFor(model => model.Isbn13, new { @id = "hidIsbn13", @readonly = "readonly" })
    @Html.HiddenFor(model => model.Isbn10, new { @id = "hidIsbn10", @readonly = "readonly" })
    @Html.HiddenFor(model => model.Cover, new { @id = "hidCover", @readonly = "readonly" })

    <div class="row d-flex align-items-stretch">
        <div class="col-md-8">
            <div class="card h-100">
                <div class="card-body">
                    <div class="mb-3">
                        @Html.LabelFor(m => m.ReviewTitle, new { @class = "control-label", @for = "txtFormReviewTitle" })
                        @Html.TextBoxFor(m => m.ReviewTitle, new { @class = "form-control", @id = "txtFormReviewTitle", @placeholder = "Review Title" })
                        @Html.ValidationMessageFor(m => m.ReviewTitle, "", new { @class = "text-danger" })
                    </div>
                    <div class="mb-3">
                        @Html.LabelFor(m => m.BookTitle, new { @class = "control-label", @for = "txtFormBookTitle" })
                        @Html.TextBoxFor(m => m.BookTitle, new { @class = "form-control", @id = "txtFormBookTitle", @placeholder = "Book Title", @readonly = "readonly", @style = "background-color: white;" })
                        @Html.ValidationMessageFor(m => m.BookTitle, "", new { @class = "text-danger" })
                    </div>
                    <div class="row">
                        <div class="col-sm-6">
                            <div class="mb-3">
                                @Html.LabelFor(m => m.Author, new { @class = "control-label", @for = "txtFormAuthor" })
                                @Html.TextBoxFor(m => m.Author, new { @class = "form-control", @id = "txtFormAuthor", @placeholder = "Book Author", @readonly = "readonly", @style = "background-color: white;" })
                                @Html.ValidationMessageFor(m => m.Rating, "", new { @class = "text-danger" })
                            </div>
                        </div>
                        <div class="col-sm-6">
                            <div class="mb-3">
                                @Html.LabelFor(m => m.Rating, new { @class = "control-label", @for = "cboFormRate" })
                                @Html.DropDownListFor(m => m.Rating, Model.Rates, new { @class = "form-select", @id = "cboFormRate" })
                                @Html.ValidationMessageFor(m => m.Rating, "", new { @class = "text-danger" })
                            </div>
                        </div>
                    </div>
                </div>
            </div>
        </div>
        <div class="col-md-4">
            <div class="card h-100 d-flex justify-content-center align-items-center">
                <div class="card-body d-flex justify-content-center align-items-center">
                    <img src="#" id="bookImg" class="img-fluid user-image" style="max-width: 100%; max-height: 100%;" alt="">
                </div>
            </div>
        </div>
    </div>
    <div class="row">
        <div class="col-md-12">
            <div class="card mt-3">
                <div class="card-body">
                    @Html.TextAreaFor(m => m.Content, new { @class = "form-control review-content", @id = "txaFormContent", placeholder = "리뷰 내용을 작성하세요.", style = "height: calc(85vh);" })
                    @Html.ValidationMessageFor(m => m.Content, "", new { @class = "text-danger" })
                    <div class="d-grid gap-2 d-md-flex justify-content-md-end mt-3">
                        <button class="btn btn-primary" type="submit">리뷰 제출하기</button>
                    </div>
                </div>
            </div>
        </div>
    </div>
}

@if (!string.IsNullOrEmpty(ViewBag.TinyMCEApiKey))
{
    <script src="https://cdn.tiny.cloud/1/@ViewBag.TinyMCEApiKey/tinymce/5/tinymce.min.js" referrerpolicy="origin"></script>
    <script>
        tinymce.init({
            selector: '#txaFormContent',
            statusbar: false
        });
    </script>
}

<script>
    function CheckError() {
        var errorMessage = "@Html.Raw(ViewBag.ErrorMessage)";
        if (errorMessage) {
            alert(errorMessage);
        }
    }

    CheckError()
</script>

